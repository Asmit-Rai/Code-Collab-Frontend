{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\asmit rai\\\\Work Space\\\\Projects\\\\CodeCollab\\\\code-collab\\\\src\\\\components\\\\Editor.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from 'react';\nimport Codemirror from 'codemirror';\nimport 'codemirror/lib/codemirror.css';\nimport 'codemirror/theme/dracula.css';\nimport 'codemirror/mode/javascript/javascript';\nimport 'codemirror/addon/edit/closetag';\nimport 'codemirror/addon/edit/closebrackets';\nimport ACTIONS from '../Actions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Editor = ({\n  socketRef,\n  roomId,\n  onCodeChange\n}) => {\n  _s();\n  const editorRef = useRef(null);\n  useEffect(() => {\n    async function init() {\n      editorRef.current = Codemirror.fromTextArea(document.getElementById('realtimeEditor'), {\n        mode: 'text/javascript',\n        theme: 'dracula',\n        autoCloseTags: true,\n        autoCloseBrackets: true,\n        lineNumbers: true\n      });\n      editorRef.current.on('change', (instance, changes) => {\n        const {\n          origin\n        } = changes;\n        const code = instance.getValue();\n        onCodeChange(code);\n        if (origin !== 'setValue') {\n          socketRef.current.emit(ACTIONS.CODE_CHANGE, {\n            roomId,\n            code\n          });\n        }\n      });\n    }\n    init();\n  }, []);\n  useEffect(() => {\n    if (socketRef.current) {\n      socketRef.current.on(ACTIONS.CODE_CHANGE, ({\n        code\n      }) => {\n        if (code !== null) {\n          editorRef.current.setValue(code);\n        }\n      });\n    }\n    return () => {\n      socketRef.current.off(ACTIONS.CODE_CHANGE);\n    };\n  }, [socketRef.current]);\n  return /*#__PURE__*/_jsxDEV(\"textarea\", {\n    id: \"realtimeEditor\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 12\n  }, this);\n};\n_s(Editor, \"ueqoO+5gVAT6IRBF08iN84bYr2g=\");\n_c = Editor;\nexport default Editor;\nvar _c;\n$RefreshReg$(_c, \"Editor\");","map":{"version":3,"names":["React","useEffect","useRef","Codemirror","ACTIONS","jsxDEV","_jsxDEV","Editor","socketRef","roomId","onCodeChange","_s","editorRef","init","current","fromTextArea","document","getElementById","mode","theme","autoCloseTags","autoCloseBrackets","lineNumbers","on","instance","changes","origin","code","getValue","emit","CODE_CHANGE","setValue","off","id","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/asmit rai/Work Space/Projects/CodeCollab/code-collab/src/components/Editor.js"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\nimport Codemirror from 'codemirror';\nimport 'codemirror/lib/codemirror.css';\nimport 'codemirror/theme/dracula.css';\nimport 'codemirror/mode/javascript/javascript';\nimport 'codemirror/addon/edit/closetag';\nimport 'codemirror/addon/edit/closebrackets';\nimport ACTIONS from '../Actions';\n\n\nconst Editor = ({ socketRef, roomId, onCodeChange }) => {\n    const editorRef = useRef(null);\n    useEffect(() => {\n        async function init() {\n            editorRef.current = Codemirror.fromTextArea(\n                document.getElementById('realtimeEditor'),\n                {\n                    mode: 'text/javascript',\n                    theme: 'dracula',\n                    autoCloseTags: true,\n                    autoCloseBrackets: true,\n                    lineNumbers: true,\n                }\n            );\n\n            editorRef.current.on('change', (instance, changes) => {\n                const { origin } = changes;\n                const code = instance.getValue();\n                onCodeChange(code);\n                if (origin !== 'setValue') {\n                    socketRef.current.emit(ACTIONS.CODE_CHANGE, {\n                        roomId,\n                        code,\n                    });\n                }\n            });\n        }\n        init();\n    }, []);\n\n    useEffect(() => {\n        if (socketRef.current) {\n            socketRef.current.on(ACTIONS.CODE_CHANGE, ({ code }) => {\n                if (code !== null) {\n                    editorRef.current.setValue(code);\n                }\n            });\n        }\n\n        return () => {\n            socketRef.current.off(ACTIONS.CODE_CHANGE);\n        };\n    }, [socketRef.current]);\n\n    return <textarea id=\"realtimeEditor\"></textarea>;\n};\n\nexport default Editor;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAChD,OAAOC,UAAU,MAAM,YAAY;AACnC,OAAO,+BAA+B;AACtC,OAAO,8BAA8B;AACrC,OAAO,uCAAuC;AAC9C,OAAO,gCAAgC;AACvC,OAAO,qCAAqC;AAC5C,OAAOC,OAAO,MAAM,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGjC,MAAMC,MAAM,GAAGA,CAAC;EAAEC,SAAS;EAAEC,MAAM;EAAEC;AAAa,CAAC,KAAK;EAAAC,EAAA;EACpD,MAAMC,SAAS,GAAGV,MAAM,CAAC,IAAI,CAAC;EAC9BD,SAAS,CAAC,MAAM;IACZ,eAAeY,IAAIA,CAAA,EAAG;MAClBD,SAAS,CAACE,OAAO,GAAGX,UAAU,CAACY,YAAY,CACvCC,QAAQ,CAACC,cAAc,CAAC,gBAAgB,CAAC,EACzC;QACIC,IAAI,EAAE,iBAAiB;QACvBC,KAAK,EAAE,SAAS;QAChBC,aAAa,EAAE,IAAI;QACnBC,iBAAiB,EAAE,IAAI;QACvBC,WAAW,EAAE;MACjB,CACJ,CAAC;MAEDV,SAAS,CAACE,OAAO,CAACS,EAAE,CAAC,QAAQ,EAAE,CAACC,QAAQ,EAAEC,OAAO,KAAK;QAClD,MAAM;UAAEC;QAAO,CAAC,GAAGD,OAAO;QAC1B,MAAME,IAAI,GAAGH,QAAQ,CAACI,QAAQ,CAAC,CAAC;QAChClB,YAAY,CAACiB,IAAI,CAAC;QAClB,IAAID,MAAM,KAAK,UAAU,EAAE;UACvBlB,SAAS,CAACM,OAAO,CAACe,IAAI,CAACzB,OAAO,CAAC0B,WAAW,EAAE;YACxCrB,MAAM;YACNkB;UACJ,CAAC,CAAC;QACN;MACJ,CAAC,CAAC;IACN;IACAd,IAAI,CAAC,CAAC;EACV,CAAC,EAAE,EAAE,CAAC;EAENZ,SAAS,CAAC,MAAM;IACZ,IAAIO,SAAS,CAACM,OAAO,EAAE;MACnBN,SAAS,CAACM,OAAO,CAACS,EAAE,CAACnB,OAAO,CAAC0B,WAAW,EAAE,CAAC;QAAEH;MAAK,CAAC,KAAK;QACpD,IAAIA,IAAI,KAAK,IAAI,EAAE;UACff,SAAS,CAACE,OAAO,CAACiB,QAAQ,CAACJ,IAAI,CAAC;QACpC;MACJ,CAAC,CAAC;IACN;IAEA,OAAO,MAAM;MACTnB,SAAS,CAACM,OAAO,CAACkB,GAAG,CAAC5B,OAAO,CAAC0B,WAAW,CAAC;IAC9C,CAAC;EACL,CAAC,EAAE,CAACtB,SAAS,CAACM,OAAO,CAAC,CAAC;EAEvB,oBAAOR,OAAA;IAAU2B,EAAE,EAAC;EAAgB;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAW,CAAC;AACpD,CAAC;AAAC1B,EAAA,CA7CIJ,MAAM;AAAA+B,EAAA,GAAN/B,MAAM;AA+CZ,eAAeA,MAAM;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}